{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport firebase from 'firebase/compat/app';\nimport firestore from 'firebase/compat/firestore';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACmwJny4dIKj2eNf9zjJBh7RXQYYLYOoA\",\n  authDomain: \"crwn-ecmrc.firebaseapp.com\",\n  projectId: \"crwn-ecmrc\",\n  storageBucket: \"crwn-ecmrc.appspot.com\",\n  messagingSenderId: \"244151740534\",\n  appId: \"1:244151740534:web:15c063b1975a1f6bc9d757\",\n  measurementId: \"G-KTN9Z0281X\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  const useRef = firestore.doc(`users/${userAuth.uid}`);\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const authentication = getAuth(app);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  signInWithPopup(authentication, provider);\n};\nexport default firebase;","map":{"version":3,"names":["initializeApp","firebase","firestore","getAuth","GoogleAuthProvider","signInWithPopup","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","useRef","doc","uid","app","authentication","provider","setCustomParameters","prompt","signInWithGoogle"],"sources":["/mnt/BA343CAC343C6D8F/VISCODE/React/e-commerce/src/firebase/firebase.utils.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport firebase from 'firebase/compat/app';\nimport firestore from 'firebase/compat/firestore';\nimport {getAuth,GoogleAuthProvider,signInWithPopup} from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACmwJny4dIKj2eNf9zjJBh7RXQYYLYOoA\",\n  authDomain: \"crwn-ecmrc.firebaseapp.com\",\n  projectId: \"crwn-ecmrc\",\n  storageBucket: \"crwn-ecmrc.appspot.com\",\n  messagingSenderId: \"244151740534\",\n  appId: \"1:244151740534:web:15c063b1975a1f6bc9d757\",\n  measurementId: \"G-KTN9Z0281X\"\n};\n\nexport const createUserProfileDocument = async (userAuth,additionalData)=>{\n    const useRef = firestore.doc(`users/${userAuth.uid}`)\n}\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const authentication = getAuth(app);\n\n\n\nconst provider =  new GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => {\n    signInWithPopup(authentication,provider);\n}\n\nexport default firebase;"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAAQC,OAAO,EAACC,kBAAkB,EAACC,eAAe,QAAO,eAAe;AACxE;AACA;;AAEA;AACA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,4BAA4B;EACxCC,SAAS,EAAE,YAAY;EACvBC,aAAa,EAAE,wBAAwB;EACvCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAQ,EAACC,cAAc,KAAG;EACtE,MAAMC,MAAM,GAAGf,SAAS,CAACgB,GAAG,CAAE,SAAQH,QAAQ,CAACI,GAAI,EAAC,CAAC;AACzD,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGpB,aAAa,CAACM,cAAc,CAAC;AACzC,OAAO,MAAMe,cAAc,GAAGlB,OAAO,CAACiB,GAAG,CAAC;AAI1C,MAAME,QAAQ,GAAI,IAAIlB,kBAAkB,EAAE;AAC1CkB,QAAQ,CAACC,mBAAmB,CAAC;EAACC,MAAM,EAAE;AAAgB,CAAC,CAAC;AACxD,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EAClCpB,eAAe,CAACgB,cAAc,EAACC,QAAQ,CAAC;AAC5C,CAAC;AAED,eAAerB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}