{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport firebase from 'firebase/compat/app';\nimport { getFirestore, getDoc, addDoc, collection, query, Timestamp, doc } from 'firebase/firestore';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { useRef } from \"react\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACmwJny4dIKj2eNf9zjJBh7RXQYYLYOoA\",\n  authDomain: \"crwn-ecmrc.firebaseapp.com\",\n  projectId: \"crwn-ecmrc\",\n  storageBucket: \"crwn-ecmrc.appspot.com\",\n  messagingSenderId: \"244151740534\",\n  appId: \"1:244151740534:web:15c063b1975a1f6bc9d757\",\n  measurementId: \"G-KTN9Z0281X\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const authentication = getAuth(app);\nexport const firestore = getFirestore(app);\nexport const createUserProfileDocument = async userAuth => {\n  const userRef = doc(firestore, 'users', userAuth.uid);\n  const snapShot = await getDoc(userRef);\n  console.log(snapShot.exists);\n  //          const snapShot = await userRef.get();\n  //          console.log(snapShot);\n  // try{  \n  //          const userRef = doc(`users/${userAuth.uid}`);\n  //          const snapShot = await userRef.get();\n  //          console.log(snapShot);\n  // //     const useRef = await addDoc(collection(firestore,'users',{\n  // //           uid : userAuth.uid,\n  // //           displayName : userAuth.displayName,\n  // //           email : userAuth.email,\n  // //           phoneNumber : userAuth.phoneNumber,\n  // //           photoUrl : userAuth.photoUrl,\n  // //           created: Timestamp.now()\n  // // })\n\n  // }\n\n  //  catch(er){\n  //  console.log(er);\n  // }\n  //   //const useRef = firestore.doc(`users/${userAuth.uid}`);\n  //   //const snapShot = await useRef.get();\n};\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  signInWithPopup(authentication, provider);\n};\nexport default firebase;","map":{"version":3,"names":["initializeApp","firebase","getFirestore","getDoc","addDoc","collection","query","Timestamp","doc","getAuth","GoogleAuthProvider","signInWithPopup","useRef","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","authentication","firestore","createUserProfileDocument","userAuth","userRef","uid","snapShot","console","log","exists","provider","setCustomParameters","prompt","signInWithGoogle"],"sources":["/mnt/BA343CAC343C6D8F/VISCODE/React/e-commerce/src/firebase/firebase.utils.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport firebase from 'firebase/compat/app';\nimport {getFirestore,getDoc,addDoc,collection,query,Timestamp, doc} from 'firebase/firestore';\nimport {getAuth,GoogleAuthProvider,signInWithPopup} from \"firebase/auth\";\nimport { useRef } from \"react\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACmwJny4dIKj2eNf9zjJBh7RXQYYLYOoA\",\n  authDomain: \"crwn-ecmrc.firebaseapp.com\",\n  projectId: \"crwn-ecmrc\",\n  storageBucket: \"crwn-ecmrc.appspot.com\",\n  messagingSenderId: \"244151740534\",\n  appId: \"1:244151740534:web:15c063b1975a1f6bc9d757\",\n  measurementId: \"G-KTN9Z0281X\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const authentication = getAuth(app);\nexport const firestore = getFirestore(app);\n\nexport const createUserProfileDocument = async (userAuth)=>{\n\n  const userRef = doc(firestore,'users',userAuth.uid);\n  const snapShot =  await getDoc(userRef);\n  console.log(snapShot.exists);\n  //          const snapShot = await userRef.get();\n  //          console.log(snapShot);\n  // try{  \n  //          const userRef = doc(`users/${userAuth.uid}`);\n  //          const snapShot = await userRef.get();\n  //          console.log(snapShot);\n  // //     const useRef = await addDoc(collection(firestore,'users',{\n  // //           uid : userAuth.uid,\n  // //           displayName : userAuth.displayName,\n  // //           email : userAuth.email,\n  // //           phoneNumber : userAuth.phoneNumber,\n  // //           photoUrl : userAuth.photoUrl,\n  // //           created: Timestamp.now()\n  // // })\n  \n  // }\n  \n  //  catch(er){\n  //  console.log(er);\n  // }\n  //   //const useRef = firestore.doc(`users/${userAuth.uid}`);\n  //   //const snapShot = await useRef.get();\n  \n}\n\n\n\n\nconst provider =  new GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => {\n    signInWithPopup(authentication,provider);\n}\n\nexport default firebase;"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAAQC,YAAY,EAACC,MAAM,EAACC,MAAM,EAACC,UAAU,EAACC,KAAK,EAACC,SAAS,EAAEC,GAAG,QAAO,oBAAoB;AAC7F,SAAQC,OAAO,EAACC,kBAAkB,EAACC,eAAe,QAAO,eAAe;AACxE,SAASC,MAAM,QAAQ,OAAO;AAC9B;AACA;;AAEA;AACA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,4BAA4B;EACxCC,SAAS,EAAE,YAAY;EACvBC,aAAa,EAAE,wBAAwB;EACvCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AACD;AACA,MAAMC,GAAG,GAAGrB,aAAa,CAACa,cAAc,CAAC;AACzC,OAAO,MAAMS,cAAc,GAAGb,OAAO,CAACY,GAAG,CAAC;AAC1C,OAAO,MAAME,SAAS,GAAGrB,YAAY,CAACmB,GAAG,CAAC;AAE1C,OAAO,MAAMG,yBAAyB,GAAG,MAAOC,QAAQ,IAAG;EAEzD,MAAMC,OAAO,GAAGlB,GAAG,CAACe,SAAS,EAAC,OAAO,EAACE,QAAQ,CAACE,GAAG,CAAC;EACnD,MAAMC,QAAQ,GAAI,MAAMzB,MAAM,CAACuB,OAAO,CAAC;EACvCG,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,MAAM,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;AAEF,CAAC;;AAKD,MAAMC,QAAQ,GAAI,IAAItB,kBAAkB,EAAE;AAC1CsB,QAAQ,CAACC,mBAAmB,CAAC;EAACC,MAAM,EAAE;AAAgB,CAAC,CAAC;AACxD,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EAClCxB,eAAe,CAACW,cAAc,EAACU,QAAQ,CAAC;AAC5C,CAAC;AAED,eAAe/B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}